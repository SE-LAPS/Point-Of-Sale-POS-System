/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.pos;

import com.database.DatabaseConnection;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDate;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author Ramesh Godara
 */
public class Dashboard extends javax.swing.JFrame {

    private Connection con;
    private int selectedJtableRow = 0;
    private boolean firstProductStatus = true;

    /**
     * Creates new form Principal
     */
    public Dashboard() {
        initComponents();
        AutoCompleteDecorator.decorate(jComboBoxProduct);
        AutoCompleteDecorator.decorate(jComboBoxCustomer);
        DatabaseConnection dbc = DatabaseConnection.getDatabaseConnection();
        con = dbc.getConnection();
        tableProduct.getColumnModel().getColumn(1).setPreferredWidth(330);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        panel_top = new javax.swing.JPanel();
        hideShow = new javax.swing.JToggleButton();
        panel_left = new javax.swing.JPanel();
        panel_purchase = new javax.swing.JPanel();
        purchase = new javax.swing.JLabel();
        panel_sales = new javax.swing.JPanel();
        sales = new javax.swing.JLabel();
        panel_inventory = new javax.swing.JPanel();
        inventory = new javax.swing.JLabel();
        panel_center = new javax.swing.JPanel();
        p1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        textFieldCode = new javax.swing.JTextField();
        textFieldQuantity = new javax.swing.JTextField();
        textFieldPrice = new javax.swing.JTextField();
        textAmountField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jComboBoxProduct = new javax.swing.JComboBox();
        jComboBoxUom = new javax.swing.JComboBox();
        buttonCal = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        textFieldCalOther = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        textFieldCalPayable = new javax.swing.JTextField();
        textFieldCalTotal = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableProduct = new javax.swing.JTable();
        buttomRemove = new javax.swing.JButton();
        buttonAdd = new javax.swing.JButton();
        buttonNew = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        LabelCustomer1 = new javax.swing.JLabel();
        jComboBoxCustomer = new javax.swing.JComboBox();
        LabelCustomer2 = new javax.swing.JLabel();
        jTextFieldContactNumber = new javax.swing.JTextField();
        LabelRemarks = new javax.swing.JLabel();
        jTextFieldRemakrs = new javax.swing.JTextField();
        jComboBoxTransactionType = new javax.swing.JComboBox();
        buttonSave = new javax.swing.JButton();
        buttonCancel = new javax.swing.JButton();
        p2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        p3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        panel_top.setBackground(new java.awt.Color(204, 204, 204));
        panel_top.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        hideShow.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        hideShow.setForeground(new java.awt.Color(255, 255, 255));
        hideShow.setText("Hide");
        hideShow.setEnabled(false);
        hideShow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hideShowActionPerformed(evt);
            }
        });
        panel_top.add(hideShow, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 70, 30));

        panel_left.setBackground(new java.awt.Color(204, 204, 204));

        panel_purchase.setBackground(new java.awt.Color(0, 153, 153));

        purchase.setBackground(new java.awt.Color(0, 102, 102));
        purchase.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        purchase.setForeground(new java.awt.Color(255, 255, 255));
        purchase.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        purchase.setText("Purchase");
        purchase.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        purchase.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mouseclicked(evt);
            }
        });

        javax.swing.GroupLayout panel_purchaseLayout = new javax.swing.GroupLayout(panel_purchase);
        panel_purchase.setLayout(panel_purchaseLayout);
        panel_purchaseLayout.setHorizontalGroup(
            panel_purchaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_purchaseLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(purchase, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        panel_purchaseLayout.setVerticalGroup(
            panel_purchaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(purchase, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
        );

        panel_sales.setBackground(new java.awt.Color(0, 153, 153));

        sales.setBackground(new java.awt.Color(0, 102, 102));
        sales.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        sales.setForeground(new java.awt.Color(255, 255, 255));
        sales.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sales.setText("Sales");
        sales.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        sales.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mouseclicked(evt);
            }
        });

        javax.swing.GroupLayout panel_salesLayout = new javax.swing.GroupLayout(panel_sales);
        panel_sales.setLayout(panel_salesLayout);
        panel_salesLayout.setHorizontalGroup(
            panel_salesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_salesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sales, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        panel_salesLayout.setVerticalGroup(
            panel_salesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sales, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
        );

        panel_inventory.setBackground(new java.awt.Color(0, 153, 153));

        inventory.setBackground(new java.awt.Color(0, 102, 102));
        inventory.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        inventory.setForeground(new java.awt.Color(255, 255, 255));
        inventory.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        inventory.setText("Inventory");
        inventory.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        inventory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mouseclicked(evt);
            }
        });

        javax.swing.GroupLayout panel_inventoryLayout = new javax.swing.GroupLayout(panel_inventory);
        panel_inventory.setLayout(panel_inventoryLayout);
        panel_inventoryLayout.setHorizontalGroup(
            panel_inventoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_inventoryLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(inventory, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                .addContainerGap())
        );
        panel_inventoryLayout.setVerticalGroup(
            panel_inventoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(inventory, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout panel_leftLayout = new javax.swing.GroupLayout(panel_left);
        panel_left.setLayout(panel_leftLayout);
        panel_leftLayout.setHorizontalGroup(
            panel_leftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel_purchase, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panel_sales, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panel_inventory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        panel_leftLayout.setVerticalGroup(
            panel_leftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_leftLayout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(panel_purchase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel_sales, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel_inventory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panel_center.setBackground(new java.awt.Color(51, 255, 255));
        panel_center.setLayout(new java.awt.CardLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Product", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Code");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Quantity");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Price");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Amount");

        textFieldCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldCodeActionPerformed(evt);
            }
        });
        textFieldCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textFieldCodeKeyTyped(evt);
            }
        });

        textFieldQuantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textFieldQuantityKeyReleased(evt);
            }
        });

        textFieldPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textFieldPriceKeyReleased(evt);
            }
        });

        textAmountField.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        textAmountField.setEnabled(false);
        textAmountField.setFocusable(false);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("UOM");

        jComboBoxProduct.setEditable(true);
        jComboBoxProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxProductActionPerformed(evt);
            }
        });

        jComboBoxUom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxUomActionPerformed(evt);
            }
        });

        buttonCal.setText("Cal");
        buttonCal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textFieldCode, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonCal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxUom, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textFieldQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textFieldPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textAmountField, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(textFieldCode, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(jComboBoxProduct, javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jComboBoxUom, javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(textFieldQuantity, javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(textFieldPrice, javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(textAmountField, javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(buttonCal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setText("Amount");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setText("Other ");

        textFieldCalOther.setText("0.0");
        textFieldCalOther.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textFieldCalOtherKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textFieldCalOtherKeyTyped(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setText("Total");

        textFieldCalPayable.setEditable(false);
        textFieldCalPayable.setText("0.0");
        textFieldCalPayable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldCalPayableActionPerformed(evt);
            }
        });

        textFieldCalTotal.setEditable(false);
        textFieldCalTotal.setText("0.0");
        textFieldCalTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldCalTotalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel9)
            .addComponent(jLabel10)
            .addComponent(textFieldCalTotal)
            .addComponent(textFieldCalOther)
            .addComponent(textFieldCalPayable)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textFieldCalTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addGap(11, 11, 11)
                .addComponent(textFieldCalOther, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textFieldCalPayable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(96, 96, 96))
        );

        tableProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Code", "Product", "UOM", "Quantity", "Price", "Amount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableProduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableProductMouseClicked(evt);
            }
        });
        tableProduct.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tableProductKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tableProduct);

        buttomRemove.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        buttomRemove.setText("Remove");
        buttomRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttomRemoveActionPerformed(evt);
            }
        });

        buttonAdd.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        buttonAdd.setText("Add/Update");
        buttonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddActionPerformed(evt);
            }
        });

        buttonNew.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        buttonNew.setText("New");
        buttonNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonNewActionPerformed(evt);
            }
        });

        jPanel5.setLayout(new javax.swing.BoxLayout(jPanel5, javax.swing.BoxLayout.LINE_AXIS));

        jPanel6.setLayout(new javax.swing.BoxLayout(jPanel6, javax.swing.BoxLayout.LINE_AXIS));

        LabelCustomer1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        LabelCustomer1.setText("Customer");
        jPanel6.add(LabelCustomer1);

        jComboBoxCustomer.setEditable(true);
        jComboBoxCustomer.setMinimumSize(new java.awt.Dimension(123, 123));
        jComboBoxCustomer.setPreferredSize(new java.awt.Dimension(240, 20));
        jComboBoxCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxCustomerActionPerformed(evt);
            }
        });
        jPanel6.add(jComboBoxCustomer);

        LabelCustomer2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        LabelCustomer2.setText("Contact No");
        jPanel6.add(LabelCustomer2);
        jPanel6.add(jTextFieldContactNumber);

        LabelRemarks.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        LabelRemarks.setText("Remarks");
        jPanel6.add(LabelRemarks);
        jPanel6.add(jTextFieldRemakrs);

        jComboBoxTransactionType.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jComboBoxTransactionType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Cash", "Credit" }));
        jComboBoxTransactionType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxTransactionTypeActionPerformed(evt);
            }
        });
        jPanel6.add(jComboBoxTransactionType);

        buttonSave.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        buttonSave.setText("Save");
        buttonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSaveActionPerformed(evt);
            }
        });
        jPanel6.add(buttonSave);

        buttonCancel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        buttonCancel.setText("Cancel");
        jPanel6.add(buttonCancel);

        javax.swing.GroupLayout p1Layout = new javax.swing.GroupLayout(p1);
        p1.setLayout(p1Layout);
        p1Layout.setHorizontalGroup(
            p1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p1Layout.createSequentialGroup()
                .addGroup(p1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(p1Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(198, 198, 198))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p1Layout.createSequentialGroup()
                        .addGroup(p1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(p1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(buttonAdd)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttomRemove)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonNew))
                            .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(11, 11, 11)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(281, 281, 281))
        );
        p1Layout.setVerticalGroup(
            p1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(p1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttomRemove)
                    .addComponent(buttonAdd)
                    .addComponent(buttonNew))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(p1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(p1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 441, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 23, Short.MAX_VALUE))
                    .addGroup(p1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        panel_center.add(p1, "card2");

        jLabel2.setText("P2");

        javax.swing.GroupLayout p2Layout = new javax.swing.GroupLayout(p2);
        p2.setLayout(p2Layout);
        p2Layout.setHorizontalGroup(
            p2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p2Layout.createSequentialGroup()
                .addGap(296, 296, 296)
                .addComponent(jLabel2)
                .addContainerGap(1302, Short.MAX_VALUE))
        );
        p2Layout.setVerticalGroup(
            p2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p2Layout.createSequentialGroup()
                .addGap(190, 190, 190)
                .addComponent(jLabel2)
                .addContainerGap(440, Short.MAX_VALUE))
        );

        panel_center.add(p2, "card3");

        jLabel3.setText("P3");

        javax.swing.GroupLayout p3Layout = new javax.swing.GroupLayout(p3);
        p3.setLayout(p3Layout);
        p3Layout.setHorizontalGroup(
            p3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p3Layout.createSequentialGroup()
                .addGap(309, 309, 309)
                .addComponent(jLabel3)
                .addContainerGap(1289, Short.MAX_VALUE))
        );
        p3Layout.setVerticalGroup(
            p3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p3Layout.createSequentialGroup()
                .addGap(192, 192, 192)
                .addComponent(jLabel3)
                .addContainerGap(438, Short.MAX_VALUE))
        );

        panel_center.add(p3, "card4");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel_top, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(panel_left, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel_center, javax.swing.GroupLayout.PREFERRED_SIZE, 1454, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(panel_top, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panel_left, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panel_center, javax.swing.GroupLayout.DEFAULT_SIZE, 606, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(1362, 712));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void hideShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hideShowActionPerformed
        if (hideShow.isSelected()) {
            panel_left.setVisible(false);
            hideShow.setText("Show");
        } else {
            panel_left.setVisible(true);
            hideShow.setText("Hide");
        }
    }//GEN-LAST:event_hideShowActionPerformed

    private void mouseclicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mouseclicked
        if (evt.getSource() == purchase) {
            p1.setVisible(true);
            p2.setVisible(false);
            p3.setVisible(false);

            panel_purchase.setBackground(new Color(0, 102, 102));
            panel_sales.setBackground(new Color(0, 153, 153));
            panel_inventory.setBackground(new Color(0, 153, 153));
        }
        if (evt.getSource() == sales) {
            p1.setVisible(false);
            p2.setVisible(true);
            p3.setVisible(false);

            panel_purchase.setBackground(new Color(0, 153, 153));
            panel_sales.setBackground(new Color(0, 102, 102));
            panel_inventory.setBackground(new Color(0, 153, 153));
        }
        if (evt.getSource() == inventory) {
            p1.setVisible(false);
            p2.setVisible(false);
            p3.setVisible(true);

            panel_purchase.setBackground(new Color(0, 153, 153));
            panel_sales.setBackground(new Color(0, 153, 153));
            panel_inventory.setBackground(new Color(0, 102, 102));
        }
    }//GEN-LAST:event_mouseclicked

    private void textFieldQuantityKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textFieldQuantityKeyReleased
        this.calculatePrice();
    }//GEN-LAST:event_textFieldQuantityKeyReleased

    private void calculatePrice() {
        if (!textFieldPrice.getText().isEmpty() && !textFieldQuantity.getText().isEmpty()) {
            float qty = Float.parseFloat(textFieldQuantity.getText().toString());
            float amt = Float.parseFloat(textFieldPrice.getText().toString());
            float tot = qty * amt;
            tot = (float) (Math.round(tot * 100) / 100.0);
            textAmountField.setText(String.valueOf(tot));
        }
    }
    private void buttonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddActionPerformed
        if (selectedJtableRow != 0) {
            selectedJtableRow -= 1;
            tableProduct.setValueAt(textFieldCode.getText(), selectedJtableRow, 0);
            tableProduct.setValueAt(jComboBoxProduct.getSelectedItem(), selectedJtableRow, 1);
            tableProduct.setValueAt(jComboBoxUom.getSelectedItem(), selectedJtableRow, 2);
            tableProduct.setValueAt(textFieldQuantity.getText(), selectedJtableRow, 3);
            tableProduct.setValueAt(textFieldPrice.getText(), selectedJtableRow, 4);
            tableProduct.setValueAt(textAmountField.getText(), selectedJtableRow, 5);
            this.resetProductDetail();
            selectedJtableRow = 0;
        } else {
            DefaultTableModel model = new DefaultTableModel();
            model = (DefaultTableModel) tableProduct.getModel();

            model.addRow(new Object[]{
                textFieldCode.getText(),
                jComboBoxProduct.getSelectedItem(),
                jComboBoxUom.getSelectedItem(),
                textFieldQuantity.getText(),
                textFieldPrice.getText(),
                textAmountField.getText()
            });

            int sum = 0;

            for (int i = 0; i < tableProduct.getRowCount(); i++) {
//                sum = sum + Integer.parseInt(tableProduct.getValueAt(i, 4).toString());
            }

            textFieldCalTotal.setText(Integer.toString(sum));
            this.resetProductDetail();
        }
        this.calculateTotalAmount();
        tableProduct.changeSelection(tableProduct.getRowCount() - 1, 0, false, false);
    }//GEN-LAST:event_buttonAddActionPerformed

    private void resetProductDetail() {
        textFieldCode.setText("");
        jComboBoxProduct.removeAllItems();
        jComboBoxUom.removeAllItems();
        textFieldQuantity.setText("");
        textFieldPrice.setText("");
        textAmountField.setText("");
        textFieldCode.requestFocus();
    }

    private void textFieldCalPayableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldCalPayableActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldCalPayableActionPerformed

    private void textFieldCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldCodeActionPerformed

    private void fillProductDetail(java.awt.event.KeyEvent evt) {
        String pCode = textFieldCode.getText();
        try {
            LocalDate documentDate = LocalDate.now();
            Statement stmt = con.createStatement();
            String query = "select code, a.name item_name, b.name as pack_unit, a.pack_size, c.name as standard_unit, "
                    + "p.sale_price from items a, uoms b, uoms c,\n"
                    + "(select item_id, sale_price from item_prices\n"
                    + "where date'" + documentDate + "' between effective_from and effective_to) p\n"
                    + "where a.code=? and a.pack_unit_id = b.UOM_ID and a.standard_unit_id = c.uom_id\n"
                    + "and a.item_id = p.item_id\n"
                    + "order by 2";
            PreparedStatement pstmt = con.prepareStatement(query);
            pstmt.setString(1, pCode);
            ResultSet rs = pstmt.executeQuery();

            if (rs.next()) {
                //JOptionPane.showMessageDialog(this, "Product name not found");
                firstProductStatus = false;
                jComboBoxProduct.removeAllItems();
                jComboBoxUom.removeAllItems();
                jComboBoxProduct.setSelectedItem(rs.getString("item_name"));
                firstProductStatus = true;
                jComboBoxUom.addItem(rs.getString("pack_unit"));
                jComboBoxUom.addItem(rs.getString("standard_unit"));
                textFieldPrice.setText(rs.getString("sale_price"));
            } else {
                jComboBoxProduct.removeAllItems();
                jComboBoxUom.removeAllItems();
            }
        } catch (SQLException ex) {
            System.out.println(ex);
        }
    }
    private void textFieldCodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textFieldCodeKeyTyped
        //if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        this.fillProductDetail(evt);
        //}
    }//GEN-LAST:event_textFieldCodeKeyTyped

    private void jComboBoxProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxProductActionPerformed
        if (firstProductStatus) {
            String searchText = (String) jComboBoxProduct.getSelectedItem();
            if (searchText != null && searchText.length() > 2) {
                try {
                    LocalDate documentDate = LocalDate.now();
                    Statement stmt = con.createStatement();
                    String query = "select code, a.name item_name, b.name as pack_unit, a.pack_size, c.name as standard_unit, "
                            + "p.sale_price from items a, uoms b, uoms c,\n"
                            + "(select item_id, sale_price from item_prices\n"
                            + "where date'" + documentDate + "' between effective_from and effective_to) p\n"
                            + "where upper(a.name) LIKE upper(?) and a.pack_unit_id = b.UOM_ID and a.standard_unit_id = c.uom_id\n"
                            + "and a.item_id = p.item_id\n"
                            + "order by 2";
                    PreparedStatement pstmt = con.prepareStatement(query);
                    pstmt.setString(1, "%" + searchText + "%");
                    ResultSet rs = pstmt.executeQuery();

                    int status = 0;
                    while (rs.next()) {
                        status = 1;
                        jComboBoxProduct.addItem(rs.getString("item_name"));
                    }
                    if (status == 0) {
                        jComboBoxProduct.removeAllItems();
                    }

                } catch (SQLException ex) {
                    Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_jComboBoxProductActionPerformed

    private void selectProductDetail() {
        if (jComboBoxProduct.getSelectedIndex() != -1) {
            System.out.println(jComboBoxProduct.getSelectedItem());
        }
    }

    private void buttonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSaveActionPerformed
        LocalDate documentDate = LocalDate.now();
        try {
            Statement stmt = con.createStatement();
            ResultSet rs1 = stmt.executeQuery("select pos_sequence.nextval from dual");
            rs1.next();
            int posSequence = rs1.getInt("nextval");
            String query = "insert into pos (POS_ID,CUSTOMER,CONTACT_NUMBER,TOTAL,OTHER,PAYBLE,REMARKS,TRANSACTION_TYPE) "
                    + "values(" + posSequence + ",'" + jComboBoxCustomer.getSelectedItem() + "','" + jTextFieldContactNumber.getText() + "',"
                    + "" + textFieldCalTotal.getText() + "," + textFieldCalOther.getText() + "," + textFieldCalPayable.getText() + ","
                    + "'" + jTextFieldRemakrs.getText() + "','" + jComboBoxTransactionType.getSelectedItem() + "')";
            int rs = stmt.executeUpdate(query);
            DefaultTableModel model = new DefaultTableModel();
            model = (DefaultTableModel) tableProduct.getModel();

            String posDetailsQuery = "insert into pos_details (POS_ID,CODE,PRODUCT_NAME,UOM,QUANTITY,PRICE,AMOUNT) ";
            System.out.println(model.getRowCount());
            for (int count = 0; count < model.getRowCount(); count++) {
                posDetailsQuery += "select " + posSequence + ",'" + model.getValueAt(count, 0) + "','" + model.getValueAt(count, 1) + "','" + model.getValueAt(count, 2) + "'," + model.getValueAt(count, 3) + "," + model.getValueAt(count, 4) + "," + model.getValueAt(count, 5) + " from dual ";
                if (count != (model.getRowCount() - 1)) {
                    posDetailsQuery += "union all ";
                }
            }
            stmt.executeQuery(posDetailsQuery);
            while (model.getRowCount() > 0) {
                model.removeRow(0);
            }
            this.resetWholeForm();
            JOptionPane.showMessageDialog(this, "Invoice has been saved successfully");
        } catch (SQLException ex) {
            System.out.println(ex);
        }
    }//GEN-LAST:event_buttonSaveActionPerformed

    private void calculateTotalAmount() {
        DefaultTableModel model = new DefaultTableModel();
        model = (DefaultTableModel) tableProduct.getModel();
        float amount = 0;
        float other = 0;
        for (int count = 0; count < model.getRowCount(); count++) {
            amount += Float.parseFloat((String) model.getValueAt(count, 5));
        }
        textFieldCalTotal.setText(Float.toString(amount));
        try {
            other = Float.parseFloat(textFieldCalOther.getText());
        } catch(Exception e) {}
        textFieldCalPayable.setText(Float.toString(amount + other));
    }

    private void resetWholeForm() {
        this.resetProductDetail();
        jComboBoxCustomer.removeAllItems();
        jTextFieldContactNumber.setText("");
        jTextFieldRemakrs.setText("");
        textFieldCalTotal.setText("");
        textFieldCalOther.setText("");
        textFieldCalPayable.setText("");
    }

    private void tableProductKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableProductKeyReleased
        this.setProductDetail();
    }//GEN-LAST:event_tableProductKeyReleased

    private void tableProductMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableProductMouseClicked
        this.setProductDetail();
    }//GEN-LAST:event_tableProductMouseClicked

    private void buttomRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttomRemoveActionPerformed
        if (selectedJtableRow != 0) {
            DefaultTableModel model = new DefaultTableModel();
            model = (DefaultTableModel) tableProduct.getModel();
            model.removeRow(tableProduct.getSelectedRow());
            selectedJtableRow = 0;
            this.calculateTotalAmount();
            this.resetProductDetail();
        }
    }//GEN-LAST:event_buttomRemoveActionPerformed

    private void buttonNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonNewActionPerformed
        selectedJtableRow = 0;
        this.resetProductDetail();
    }//GEN-LAST:event_buttonNewActionPerformed

    private void buttonCalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCalActionPerformed
        String pName = (String) jComboBoxProduct.getSelectedItem();
        try {
            LocalDate documentDate = LocalDate.now();
            Statement stmt = con.createStatement();
            String query = "select code, a.name item_name, b.name as pack_unit, a.pack_size, c.name as standard_unit,"
                    + "p.sale_price from items a, uoms b, uoms c,\n"
                    + "(select item_id, sale_price from item_prices\n"
                    + "where date'" + documentDate + "' between effective_from and effective_to) p\n"
                    + "where a.name=? and a.pack_unit_id = b.UOM_ID and a.standard_unit_id = c.uom_id\n"
                    + "and a.item_id = p.item_id\n"
                    + "order by 2";
            PreparedStatement pstmt = con.prepareStatement(query);
            pstmt.setString(1, pName);
            ResultSet rs = pstmt.executeQuery();

            if (rs.next()) {
                //JOptionPane.showMessageDialog(this, "Product name not found");
                firstProductStatus = false;
                jComboBoxProduct.removeAllItems();
                jComboBoxUom.removeAllItems();
                textFieldCode.setText(rs.getString("code"));
                jComboBoxProduct.setSelectedItem(rs.getString("item_name"));
                firstProductStatus = true;
                jComboBoxUom.addItem(rs.getString("pack_unit"));
                jComboBoxUom.addItem(rs.getString("standard_unit"));
                textFieldPrice.setText(rs.getString("sale_price"));
            } else {
                jComboBoxProduct.removeAllItems();
                jComboBoxUom.removeAllItems();
            }
        } catch (SQLException ex) {
            System.out.println(ex);
        }
    }//GEN-LAST:event_buttonCalActionPerformed

    private void jComboBoxUomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxUomActionPerformed
        String uom = (String) jComboBoxUom.getSelectedItem();
        try {
            Statement stmt = con.createStatement();
            String query = "select * from uoms where name=?";
            PreparedStatement pstmt = con.prepareStatement(query);
            pstmt.setString(1, uom);

            ResultSet rs = pstmt.executeQuery();

            if (rs.next()) {
                String unitName = rs.getString("name");
                String pCode = textFieldCode.getText();
                LocalDate documentDate = LocalDate.now();
                String query1 = "select code, a.name item_name, b.name as pack_unit, a.pack_size, c.name as standard_unit, "
                        + "p.sale_price from items a, uoms b, uoms c,\n"
                        + "(select item_id, sale_price from item_prices\n"
                        + "where date'" + documentDate + "' between effective_from and effective_to) p\n"
                        + "where a.code=? and a.pack_unit_id = b.UOM_ID and a.standard_unit_id = c.uom_id\n"
                        + "and a.item_id = p.item_id\n"
                        + "order by 2";
                PreparedStatement pstmt1 = con.prepareStatement(query1);
                pstmt1.setString(1, pCode);
                ResultSet rs1 = pstmt1.executeQuery();
                if (rs1.next()) {
                    if (unitName.equals(rs1.getString("pack_unit"))) {
                        float price = rs1.getFloat("sale_price");
                        price = (float) (Math.round(price * 100) / 100.0);
                        textFieldPrice.setText(String.valueOf(price));
                    } else {
                        int packSize = rs1.getInt("pack_size");
                        float salePrice = rs1.getFloat("sale_price");
                        float pricePerStandardUnit = packSize / salePrice;
                        pricePerStandardUnit = (float) (Math.round(pricePerStandardUnit * 100) / 100.0);
                        textFieldPrice.setText(String.valueOf(pricePerStandardUnit));
                    }
                }
            } else {

            }
        } catch (SQLException ex) {
            System.out.println(ex);
        }
    }//GEN-LAST:event_jComboBoxUomActionPerformed

    private void textFieldPriceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textFieldPriceKeyReleased
        this.calculatePrice();
    }//GEN-LAST:event_textFieldPriceKeyReleased

    private void jComboBoxCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxCustomerActionPerformed
        String searchText = (String) jComboBoxCustomer.getSelectedItem();
        if (searchText != null && !searchText.isEmpty() && searchText.length() >= 2) {
            try {
                Statement stmt = con.createStatement();
                String query = "select * from customers where upper(name) LIKE upper(?)";
                PreparedStatement pstmt = con.prepareStatement(query);
                pstmt.setString(1, "%" + searchText + "%");
                ResultSet rs = pstmt.executeQuery();

                int status = 0;
                while (rs.next()) {
                    status = 1;
                    jComboBoxCustomer.addItem(rs.getString("name"));
                }
                if (status == 0) {
                    jComboBoxCustomer.removeAllItems();
                }

            } catch (SQLException ex) {
                Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jComboBoxCustomerActionPerformed

    private void jComboBoxTransactionTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxTransactionTypeActionPerformed

    }//GEN-LAST:event_jComboBoxTransactionTypeActionPerformed

    private void textFieldCalTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldCalTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldCalTotalActionPerformed

    private void textFieldCalOtherKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textFieldCalOtherKeyTyped
        
    }//GEN-LAST:event_textFieldCalOtherKeyTyped

    private void textFieldCalOtherKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textFieldCalOtherKeyReleased
        this.calculateTotalAmount();
    }//GEN-LAST:event_textFieldCalOtherKeyReleased

    private void setProductDetail() {
        jComboBoxProduct.removeAllItems();
        jComboBoxUom.removeAllItems();
        selectedJtableRow = tableProduct.getSelectedRow() + 1;
        textFieldCode.setText((String) tableProduct.getValueAt(tableProduct.getSelectedRow(), 0));
        jComboBoxProduct.setSelectedItem((String) tableProduct.getValueAt(tableProduct.getSelectedRow(), 1));
        jComboBoxUom.addItem((String) tableProduct.getValueAt(tableProduct.getSelectedRow(), 2));
        textFieldQuantity.setText((String) tableProduct.getValueAt(tableProduct.getSelectedRow(), 3));
        textFieldPrice.setText((String) tableProduct.getValueAt(tableProduct.getSelectedRow(), 4));
        textAmountField.setText((String) tableProduct.getValueAt(tableProduct.getSelectedRow(), 5));
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Dashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LabelCustomer1;
    private javax.swing.JLabel LabelCustomer2;
    private javax.swing.JLabel LabelRemarks;
    private javax.swing.JButton buttomRemove;
    private javax.swing.JButton buttonAdd;
    private javax.swing.JButton buttonCal;
    private javax.swing.JButton buttonCancel;
    private javax.swing.JButton buttonNew;
    private javax.swing.JButton buttonSave;
    private javax.swing.JToggleButton hideShow;
    private javax.swing.JLabel inventory;
    private javax.swing.JComboBox jComboBoxCustomer;
    private javax.swing.JComboBox jComboBoxProduct;
    private javax.swing.JComboBox jComboBoxTransactionType;
    private javax.swing.JComboBox jComboBoxUom;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldContactNumber;
    private javax.swing.JTextField jTextFieldRemakrs;
    private javax.swing.JPanel p1;
    private javax.swing.JPanel p2;
    private javax.swing.JPanel p3;
    private javax.swing.JPanel panel_center;
    private javax.swing.JPanel panel_inventory;
    private javax.swing.JPanel panel_left;
    private javax.swing.JPanel panel_purchase;
    private javax.swing.JPanel panel_sales;
    private javax.swing.JPanel panel_top;
    private javax.swing.JLabel purchase;
    private javax.swing.JLabel sales;
    private javax.swing.JTable tableProduct;
    private javax.swing.JTextField textAmountField;
    private javax.swing.JTextField textFieldCalOther;
    private javax.swing.JTextField textFieldCalPayable;
    private javax.swing.JTextField textFieldCalTotal;
    private javax.swing.JTextField textFieldCode;
    private javax.swing.JTextField textFieldPrice;
    private javax.swing.JTextField textFieldQuantity;
    // End of variables declaration//GEN-END:variables
}
